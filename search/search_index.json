{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"SoftwareEngineering/JasperReport/","text":"Troubleshooting iReport not opening? Java 8 may be the issue Download and install JDK7 (http://www.oracle.com/technetwork/java/javase/down...ds/jdk7-downloads-1880260.html) Modify the iReport config file 'ireport.conf' found in the 'etc' folder in the iReport installation directory. (on a Windows instance; possibly: C:\\Program Files\\iReport-3.7.6\\etc\\ ). Open the file in Notepad or equivalent plain text editor and find the line: #jdkhome=\"/path/to/jdk\" . Add a new line below it and replicate the property name (without the hash/\"#\") with the correct path to your new JDK install, Eg: jdkhome=\"C:\\Program Files\\Java\\jdk1.7.0_60\"","title":"Jasper Report"},{"location":"SoftwareEngineering/JasperReport/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"SoftwareEngineering/JasperReport/#ireport-not-opening-java-8-may-be-the-issue","text":"Download and install JDK7 (http://www.oracle.com/technetwork/java/javase/down...ds/jdk7-downloads-1880260.html) Modify the iReport config file 'ireport.conf' found in the 'etc' folder in the iReport installation directory. (on a Windows instance; possibly: C:\\Program Files\\iReport-3.7.6\\etc\\ ). Open the file in Notepad or equivalent plain text editor and find the line: #jdkhome=\"/path/to/jdk\" . Add a new line below it and replicate the property name (without the hash/\"#\") with the correct path to your new JDK install, Eg: jdkhome=\"C:\\Program Files\\Java\\jdk1.7.0_60\"","title":"iReport not opening? Java 8 may be the issue"},{"location":"SoftwareEngineering/ApacheXampp/ApacheXampp/","text":"Make XAMPP/Apache serve file outside of htdocs Update document root Find and update DocumentRoot DocumentRoot \"D:\\1Projects\\INPROGRESS\\0127crminventoryms\\ims\\public\" Make an Alias In http.conf file, add <Directory \"C:\\xampp\\htdocs\"> Options Indexes FollowSymLinks Includes ExecCGI AllowOverride All Require all granted </Directory> Find the <IfModule alias_module></IfModule> Alias /directoryalias \"C:\\xampp\\htdocs\" Make virtual host Add in file apache/conf/extra/httpd-vhosts.conf <VirtualHost *:80> DocumentRoot \"E:\\1Projects\\04Iras\\public\" ServerName localhost <Directory \"E:\\1Projects\\04Iras\\public\"> Options FollowSymLinks AllowOverride All DirectoryIndex index.php Require all granted </Directory> </VirtualHost>","title":"Apache/Xampp"},{"location":"SoftwareEngineering/ApacheXampp/ApacheXampp/#make-xamppapache-serve-file-outside-of-htdocs","text":"","title":"Make XAMPP/Apache serve file outside of htdocs"},{"location":"SoftwareEngineering/ApacheXampp/ApacheXampp/#update-document-root","text":"Find and update DocumentRoot DocumentRoot \"D:\\1Projects\\INPROGRESS\\0127crminventoryms\\ims\\public\"","title":"Update document root"},{"location":"SoftwareEngineering/ApacheXampp/ApacheXampp/#make-an-alias","text":"In http.conf file, add <Directory \"C:\\xampp\\htdocs\"> Options Indexes FollowSymLinks Includes ExecCGI AllowOverride All Require all granted </Directory> Find the <IfModule alias_module></IfModule> Alias /directoryalias \"C:\\xampp\\htdocs\"","title":"Make an Alias"},{"location":"SoftwareEngineering/ApacheXampp/ApacheXampp/#make-virtual-host","text":"Add in file apache/conf/extra/httpd-vhosts.conf <VirtualHost *:80> DocumentRoot \"E:\\1Projects\\04Iras\\public\" ServerName localhost <Directory \"E:\\1Projects\\04Iras\\public\"> Options FollowSymLinks AllowOverride All DirectoryIndex index.php Require all granted </Directory> </VirtualHost>","title":"Make virtual host"},{"location":"SoftwareEngineering/BigData/BigData/","text":"Components of a Big Data system Data Click stream, social public API, crawling system, server generated logs, mobile apps, telco data (location information, CDR), call center logs, videoaudio logs, transactional database. Data collector FlumeFluentKafka for streaming logs, Sqoop for RDBMS (transferring data between relational databases and Hadoop), Nutch for crawling, custom application to harvest from API Data storage SAN, Datawarehouse, RDBMS, NoSQL DB, HDFS Data processor GRID computing, Hadoop (MR, Pig, Hive), Spark Other supporting modules Cluster management, Solr (enterprise-search platform), interface, Ozzie for workflow management (server-based workflow scheduling system to manage Hadoop jobs) Softwares Hive - data query and analysis Hive gives a SQL-like interface to query data stored in various databases and file systems that integrate with Hadoop. Impala - massively parallel processing (MPP) SQL query engine for data stored in a computer cluster running Apache Hadoop . Inspired by Google F1, Google Dremel project Hue - SQL Assistant for querying Databases & Data Warehouses and collaborating Its goal is to make self service data querying more widespread in organizations.","title":"Big Data"},{"location":"SoftwareEngineering/BigData/BigData/#components-of-a-big-data-system","text":"","title":"Components of a Big Data system"},{"location":"SoftwareEngineering/BigData/BigData/#data","text":"Click stream, social public API, crawling system, server generated logs, mobile apps, telco data (location information, CDR), call center logs, videoaudio logs, transactional database.","title":"Data"},{"location":"SoftwareEngineering/BigData/BigData/#data-collector","text":"FlumeFluentKafka for streaming logs, Sqoop for RDBMS (transferring data between relational databases and Hadoop), Nutch for crawling, custom application to harvest from API","title":"Data collector"},{"location":"SoftwareEngineering/BigData/BigData/#data-storage","text":"SAN, Datawarehouse, RDBMS, NoSQL DB, HDFS","title":"Data storage"},{"location":"SoftwareEngineering/BigData/BigData/#data-processor","text":"GRID computing, Hadoop (MR, Pig, Hive), Spark","title":"Data processor"},{"location":"SoftwareEngineering/BigData/BigData/#other-supporting-modules","text":"Cluster management, Solr (enterprise-search platform), interface, Ozzie for workflow management (server-based workflow scheduling system to manage Hadoop jobs)","title":"Other supporting modules"},{"location":"SoftwareEngineering/BigData/BigData/#softwares","text":"","title":"Softwares"},{"location":"SoftwareEngineering/BigData/BigData/#hive-data-query-and-analysis","text":"Hive gives a SQL-like interface to query data stored in various databases and file systems that integrate with Hadoop.","title":"Hive - data query and analysis"},{"location":"SoftwareEngineering/BigData/BigData/#impala-massively-parallel-processing-mpp-sql-query-engine","text":"for data stored in a computer cluster running Apache Hadoop . Inspired by Google F1, Google Dremel project","title":"Impala - \u00a0massively parallel processing\u00a0(MPP) SQL query engine"},{"location":"SoftwareEngineering/BigData/BigData/#hue-sql-assistant-for-querying-databases-data-warehouses-and-collaborating","text":"Its goal is to make self service data querying more widespread in organizations.","title":"Hue - SQL Assistant for querying Databases &amp; Data Warehouses and collaborating"},{"location":"SoftwareEngineering/CMD/batcmd/","text":"Window bat file Batch rename ren \"D:\\folder\\filename*.jpg\" filename*.png Comment rem echo \"abc\" Timeout and interval cmd windows Create bat file :loop curl -d \"account=6666\" -X POST http://192.168.11.82/iras/api/login/1/search timeout /t 600 goto loop Powershell loop and sleep while ($true){ $wsh = New-Object -ComObject WScript.Shell $wsh.SendKeys('{NUMLOCK}') Write-Host \"Numlock switched\" Start-Sleep -Seconds 10 }","title":"CMD"},{"location":"SoftwareEngineering/CMD/batcmd/#batch-rename","text":"ren \"D:\\folder\\filename*.jpg\" filename*.png","title":"Batch rename"},{"location":"SoftwareEngineering/CMD/batcmd/#comment","text":"rem echo \"abc\"","title":"Comment"},{"location":"SoftwareEngineering/CMD/batcmd/#timeout-and-interval-cmd-windows","text":"Create bat file :loop curl -d \"account=6666\" -X POST http://192.168.11.82/iras/api/login/1/search timeout /t 600 goto loop","title":"Timeout and interval cmd windows"},{"location":"SoftwareEngineering/CMD/batcmd/#powershell-loop-and-sleep","text":"while ($true){ $wsh = New-Object -ComObject WScript.Shell $wsh.SendKeys('{NUMLOCK}') Write-Host \"Numlock switched\" Start-Sleep -Seconds 10 }","title":"Powershell loop and sleep"},{"location":"SoftwareEngineering/CMS/CMS/","text":"CMS Comparision Strapi Contentful Sanity Directus Craft Cockpit UniteCMS Squidex Webiny dotCMS TYPE Headless CMS o o Hybrid CMS o DEPLOYMENT Local deployment o o o o o Cloud deployment o FEATURES Api design o o Fields design o o Relationship design o o Filter o o Sort o o File upload management o o Api Roles & Permissions o o CMS Roles & Permissions o o Send email o o Create plugin/extension o o Webhooks o o DATABASE MySQL o o Postgres o MongoDB o SQLite o OTHER Open source o x o Language Node js PHP PHP PHP PHP C# Java","title":"CMS (Content Management System)"},{"location":"SoftwareEngineering/CrystalReports/CrystalReports/","text":"Failed to load database info:crdb_oracle.dll cannot be loaded Solution: Chuy\u1ec3n sang user admin c\u1ee7a m\u00e1y ho\u1eb7c ch\u1ea1y crystal reports v\u1edbi quy\u1ec1n admin crystal reports XI Release 2 the feature you are trying to use is on a network resource that is unavailable crystalreports.msi Solution: Tr\u1ecf \u0111\u1ebfn file CRXI-2/win32/CrystalReports.msi","title":"Crystal Reports"},{"location":"SoftwareEngineering/CrystalReports/CrystalReports/#failed-to-load-database-infocrdb_oracledll-cannot-be-loaded","text":"","title":"Failed to load database info:crdb_oracle.dll cannot be loaded"},{"location":"SoftwareEngineering/CrystalReports/CrystalReports/#solution","text":"Chuy\u1ec3n sang user admin c\u1ee7a m\u00e1y ho\u1eb7c ch\u1ea1y crystal reports v\u1edbi quy\u1ec1n admin","title":"Solution:"},{"location":"SoftwareEngineering/CrystalReports/CrystalReports/#crystal-reports-xi-release-2-the-feature-you-are-trying-to-use-is-on-a-network-resource-that-is-unavailable-crystalreportsmsi","text":"","title":"crystal reports XI Release 2 the feature you are trying to use is on a network resource that is unavailable crystalreports.msi"},{"location":"SoftwareEngineering/CrystalReports/CrystalReports/#solution_1","text":"Tr\u1ecf \u0111\u1ebfn file CRXI-2/win32/CrystalReports.msi","title":"Solution:"},{"location":"SoftwareEngineering/HTMLandWeb/HTML/","text":"Avoid CSRF if (request.getHeader('X-Requested-With') == null) { // Without the `X-Requested-With` header, this request could be forged. Aborts. } Redirect HTTP to HTTPS You need to put a canonical link at the head of your page to tell search engines that HTTPS is the best way to get to your site. Set <link rel=\"canonical\" href=\"https://\u2026\"/> tags in your pages. This helps search engines determine the best way to get to your site. File .htaccess Cache control ### HEADER CACHING # https://www.askapache.com/htaccess/speed-up-sites-with-htaccess-caching/ <FilesMatch \"\\.(flv|gif|jpg|jpeg|png|ico)$\"> Header set Cache-Control \"max-age=2592000\" </FilesMatch> <FilesMatch \"\\.(js|css|pdf|swf)$\"> Header set Cache-Control \"max-age=604800\" </FilesMatch> <FilesMatch \"\\.(html|htm|txt)$\"> Header set Cache-Control \"max-age=600\" </FilesMatch> <FilesMatch \"\\.(pl|php|cgi|spl|scgi|fcgi)$\"> Header unset Cache-Control </FilesMatch> Table scroll with fixed header (IE not supported) <html> <head> <title>Test</title> <style> .table-fixed-header-container { overflow: auto; } .table-fixed-header-container table { text-align: left; position: relative; border-collapse: collapse; width: 100%; } .table-fixed-header-container th { position: sticky; top: 0; background-color: white; } th, td { padding: 0.25rem; } .table-fixed-header-container { width: 300px; height: 200px; } </style> </head> <body> <div class=\"table-fixed-header-container\"> <table> <thead> <tr> <th>No</th> <th>Name</th> <th>Email</th> <th>Address</th> </tr> </thead> <tbody> <tr> <td>0001</td> <td>Nguyen Van A</td> <td>nguyenvana@gmail.com</td> <td>Ha Noi</td> </tr> <tr> <td>0002</td> <td>Nguyen Van A</td> <td>nguyenvana@gmail.com</td> <td>Ha Noi</td> </tr> <tr> <td>0099</td> <td>Nguyen Van A</td> <td>nguyenvana@gmail.com</td> <td>Ha Noi</td> </tr> </tbody> </table> </div> </body> </html>","title":"HTML and Web"},{"location":"SoftwareEngineering/HTMLandWeb/HTML/#avoid-csrf","text":"if (request.getHeader('X-Requested-With') == null) { // Without the `X-Requested-With` header, this request could be forged. Aborts. }","title":"Avoid CSRF"},{"location":"SoftwareEngineering/HTMLandWeb/HTML/#redirect-http-to-https","text":"You need to put a canonical link at the head of your page to tell search engines that HTTPS is the best way to get to your site. Set <link rel=\"canonical\" href=\"https://\u2026\"/> tags in your pages. This helps search engines determine the best way to get to your site.","title":"Redirect HTTP to HTTPS"},{"location":"SoftwareEngineering/HTMLandWeb/HTML/#file-htaccess","text":"","title":"File .htaccess"},{"location":"SoftwareEngineering/HTMLandWeb/HTML/#cache-control","text":"### HEADER CACHING # https://www.askapache.com/htaccess/speed-up-sites-with-htaccess-caching/ <FilesMatch \"\\.(flv|gif|jpg|jpeg|png|ico)$\"> Header set Cache-Control \"max-age=2592000\" </FilesMatch> <FilesMatch \"\\.(js|css|pdf|swf)$\"> Header set Cache-Control \"max-age=604800\" </FilesMatch> <FilesMatch \"\\.(html|htm|txt)$\"> Header set Cache-Control \"max-age=600\" </FilesMatch> <FilesMatch \"\\.(pl|php|cgi|spl|scgi|fcgi)$\"> Header unset Cache-Control </FilesMatch>","title":"Cache control"},{"location":"SoftwareEngineering/HTMLandWeb/HTML/#table-scroll-with-fixed-header-ie-not-supported","text":"<html> <head> <title>Test</title> <style> .table-fixed-header-container { overflow: auto; } .table-fixed-header-container table { text-align: left; position: relative; border-collapse: collapse; width: 100%; } .table-fixed-header-container th { position: sticky; top: 0; background-color: white; } th, td { padding: 0.25rem; } .table-fixed-header-container { width: 300px; height: 200px; } </style> </head> <body> <div class=\"table-fixed-header-container\"> <table> <thead> <tr> <th>No</th> <th>Name</th> <th>Email</th> <th>Address</th> </tr> </thead> <tbody> <tr> <td>0001</td> <td>Nguyen Van A</td> <td>nguyenvana@gmail.com</td> <td>Ha Noi</td> </tr> <tr> <td>0002</td> <td>Nguyen Van A</td> <td>nguyenvana@gmail.com</td> <td>Ha Noi</td> </tr> <tr> <td>0099</td> <td>Nguyen Van A</td> <td>nguyenvana@gmail.com</td> <td>Ha Noi</td> </tr> </tbody> </table> </div> </body> </html>","title":"Table scroll with fixed header (IE not supported)"},{"location":"SoftwareEngineering/Hosting/Hosting/","text":"C\u00e1c b\u01b0\u1edbc Thu\u00ea host Thu\u00ea t\u00ean mi\u1ec1n Tr\u1ecf t\u00ean mi\u1ec1n \u0111\u1ebfn m\u1ed9t nh\u00e0 cung c\u1ea5p host kh\u00e1c (Tr\u01b0\u1eddng h\u1ee3p mua t\u00ean mi\u1ec1n \u1edf m\u1ed9t nh\u00e0 cung c\u1ea5p v\u00e0 thu\u00ea host \u1edf m\u1ed9t nh\u00e0 cung c\u1ea5p kh\u00e1c) Thay \u0111\u1ed5i name server \u1edf trang c\u00e0i \u0111\u1eb7t nh\u00e0 cung c\u1ea5p t\u00ean mi\u1ec1n v\u1ec1 nh\u00e0 cung c\u1ea5p host VD: ns3.tino.org ns4.tino.org","title":"Hosting"},{"location":"SoftwareEngineering/Hosting/Hosting/#cac-buoc","text":"Thu\u00ea host Thu\u00ea t\u00ean mi\u1ec1n","title":"C\u00e1c b\u01b0\u1edbc"},{"location":"SoftwareEngineering/Hosting/Hosting/#tro-ten-mien-en-mot-nha-cung-cap-host-khac-truong-hop-mua-ten-mien-o-mot-nha-cung-cap-va-thue-host-o-mot-nha-cung-cap-khac","text":"Thay \u0111\u1ed5i name server \u1edf trang c\u00e0i \u0111\u1eb7t nh\u00e0 cung c\u1ea5p t\u00ean mi\u1ec1n v\u1ec1 nh\u00e0 cung c\u1ea5p host VD: ns3.tino.org ns4.tino.org","title":"Tr\u1ecf t\u00ean mi\u1ec1n \u0111\u1ebfn m\u1ed9t nh\u00e0 cung c\u1ea5p host kh\u00e1c (Tr\u01b0\u1eddng h\u1ee3p mua t\u00ean mi\u1ec1n \u1edf m\u1ed9t nh\u00e0 cung c\u1ea5p v\u00e0 thu\u00ea host \u1edf m\u1ed9t nh\u00e0 cung c\u1ea5p kh\u00e1c)"},{"location":"SoftwareEngineering/Java/Java/","text":"Encryption using AES File pom.xml <!-- https://mvnrepository.com/artifact/commons-codec/commons-codec --> <dependency> <groupId>commons-codec</groupId> <artifactId>commons-codec</artifactId> <version>1.11</version> </dependency> import javax.crypto.Cipher; import javax.crypto.spec.IvParameterSpec; import javax.crypto.spec.SecretKeySpec; import org.apache.commons.codec.binary.Base64; public class Encryption { private static final String KEY = \"Bar12345Bar12345\"; // 128 bit key private static final String INIT_VECTOR = \"RandomInitVector\"; // 16 bytes IV public static String encrypt(String key, String initVector, String value) { try { IvParameterSpec iv = new IvParameterSpec(initVector.getBytes(\"UTF-8\")); SecretKeySpec skeySpec = new SecretKeySpec(key.getBytes(\"UTF-8\"), \"AES\"); Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5PADDING\"); cipher.init(Cipher.ENCRYPT_MODE, skeySpec, iv); byte[] encrypted = cipher.doFinal(value.getBytes()); return Base64.encodeBase64String(encrypted); } catch (Exception ex) { ex.printStackTrace(); } return null; } public static String decrypt(String key, String initVector, String encrypted) { try { IvParameterSpec iv = new IvParameterSpec(initVector.getBytes(\"UTF-8\")); SecretKeySpec skeySpec = new SecretKeySpec(key.getBytes(\"UTF-8\"), \"AES\"); Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5PADDING\"); cipher.init(Cipher.DECRYPT_MODE, skeySpec, iv); byte[] original = cipher.doFinal(Base64.decodeBase64(encrypted)); return new String(original); } catch (Exception ex) { ex.printStackTrace(); } return null; } public static String encrypt(String value) { return encrypt(KEY, INIT_VECTOR, value); } public static String decrypt(String value) { return decrypt(KEY, INIT_VECTOR, value); } } Send Http request public static String sendHttpRequest(String url, String method, HashMap<String, String> params, String data) { HttpURLConnection connection = null; try { // Create connection URL urlObj = new URL(url); connection = (HttpURLConnection) urlObj.openConnection(); if (method != null && !\"get\".equalsIgnoreCase(method)) { connection.setRequestMethod(method); } /* * connection.setRequestProperty(\"Content-Type\", * \"application/x-www-form-urlencoded\"); */ /* * connection.setRequestProperty(\"Content-Length\", * Integer.toString(urlParameters.getBytes().length)); * connection.setRequestProperty(\"Content-Language\", \"en-US\"); */ if (params != null && !params.isEmpty()) { Set<String> keySet = params.keySet(); for(String key: keySet) { if(Utils.isNullOrEmpty(key)) { continue; } String value = params.get(key); connection.setRequestProperty(key, value); } } connection.setUseCaches(false); // Send request if (\"POST\".equals(method) || \"post\".equals(method)) { connection.setDoOutput(true); DataOutputStream wr = new DataOutputStream(connection.getOutputStream()); if (data != null) { wr.writeBytes(data); } wr.close(); } // Get Response InputStream is = connection.getInputStream(); BufferedReader rd = new BufferedReader(new InputStreamReader(is)); StringBuilder response = new StringBuilder(); // or StringBuffer if Java version 5+ String line; while ((line = rd.readLine()) != null) { response.append(line); response.append('\\r'); } rd.close(); return response.toString(); } catch (IOException e) { try { InputStream is = connection.getErrorStream(); BufferedReader rd = new BufferedReader(new InputStreamReader(is)); StringBuilder response = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { response.append(line); response.append('\\r'); } rd.close(); return response.toString(); } catch (Exception e2) { e2.printStackTrace(); return null; } } catch (Exception e) { e.printStackTrace(); return null; } finally { if (connection != null) { connection.disconnect(); } } } public static String sendGetRequest(String url, HashMap<String, String> params) { return sendHttpRequest(url, \"GET\", params, null); } public static String sendGetRequest(String url) { return sendHttpRequest(url, \"GET\", null, null); } public static String sendPostRequest(String url, HashMap<String, String> params, String data) { return sendHttpRequest(url, \"POST\", params, data); } public static void main(String[] args) { System.out.println(sendPostRequest(\"http://localhost:8080/mavenTest3/TestServlet\", null, null)); } UTF 8 Encoding // Send request if (\"POST\".equals(method) || \"post\".equals(method)) { connection.setDoOutput(true); BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(connection.getOutputStream(), \"UTF-8\")); if (data != null) { bw.write(data); } bw.flush(); bw.close(); } // Get Response InputStream is = connection.getInputStream(); BufferedReader rd = new BufferedReader(new InputStreamReader(is, \"UTF-8\")); StringBuilder response = new StringBuilder(); Send multipart file import java.io.BufferedReader; import java.io.File; import java.io.FileInputStream; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.io.OutputStream; import java.io.OutputStreamWriter; import java.io.PrintWriter; import java.net.HttpURLConnection; import java.net.URL; import java.net.URLConnection; import java.util.ArrayList; import java.util.HashMap; import java.util.List; import java.util.Set; /** * This utility class provides an abstraction layer for sending multipart HTTP * POST requests to a web server. * @author * */ public class MultipartUtils { private final String boundary; private static final String LINE_FEED = \"\\r\\n\"; private HttpURLConnection httpConn; private String charset; private OutputStream outputStream; private PrintWriter writer; /** * This constructor initializes a new HTTP POST request with content type * is set to multipart/form-data * @param requestURL * @param charset * @throws IOException */ public MultipartUtils(String requestURL, String charset, HashMap<String, String> headers) throws IOException { this.charset = charset; // creates a unique boundary based on time stamp boundary = \"===\" + System.currentTimeMillis() + \"===\"; URL url = new URL(requestURL); httpConn = (HttpURLConnection) url.openConnection(); httpConn.setUseCaches(false); httpConn.setDoOutput(true); // indicates POST method httpConn.setDoInput(true); httpConn.setRequestProperty(\"Content-Type\", \"multipart/form-data; boundary=\" + boundary); if (headers != null && !headers.isEmpty()) { Set<String> keySet = headers.keySet(); for (String key : keySet) { if (Utils.isNullOrEmpty(key)) { continue; } String value = headers.get(key); httpConn.setRequestProperty(key, value); } } outputStream = httpConn.getOutputStream(); writer = new PrintWriter(new OutputStreamWriter(outputStream, charset), true); } /** * Adds a form field to the request * @param name field name * @param value field value */ public void addFormField(String name, String value) { writer.append(\"--\" + boundary).append(LINE_FEED); writer.append(\"Content-Disposition: form-data; name=\\\"\" + name + \"\\\"\") .append(LINE_FEED); writer.append(\"Content-Type: text/plain; charset=\" + charset).append( LINE_FEED); writer.append(LINE_FEED); writer.append(value).append(LINE_FEED); writer.flush(); } /** * Adds a upload file section to the request * @param fieldName name attribute in <input type=\"file\" name=\"...\" /> * @param uploadFile a File to be uploaded * @throws IOException */ public void addFilePart(String fieldName, File uploadFile) throws IOException { String fileName = uploadFile.getName(); writer.append(\"--\" + boundary).append(LINE_FEED); writer.append( \"Content-Disposition: form-data; name=\\\"\" + fieldName + \"\\\"; filename=\\\"\" + fileName + \"\\\"\") .append(LINE_FEED); writer.append( \"Content-Type: \" + URLConnection.guessContentTypeFromName(fileName)) .append(LINE_FEED); writer.append(\"Content-Transfer-Encoding: binary\").append(LINE_FEED); writer.append(LINE_FEED); writer.flush(); FileInputStream inputStream = new FileInputStream(uploadFile); byte[] buffer = new byte[4096]; int bytesRead = -1; while ((bytesRead = inputStream.read(buffer)) != -1) { outputStream.write(buffer, 0, bytesRead); } outputStream.flush(); inputStream.close(); writer.append(LINE_FEED); writer.flush(); } /** * Adds a header field to the request. * @param name - name of the header field * @param value - value of the header field */ public void addHeaderField(String name, String value) { writer.append(name + \": \" + value).append(LINE_FEED); writer.flush(); } /** * Completes the request and receives response from the server. * @return a list of Strings as response in case the server returned * status OK, otherwise an exception is thrown. * @throws IOException */ public List<String> send() throws IOException { List<String> response = new ArrayList<String>(); writer.append(LINE_FEED).flush(); writer.append(\"--\" + boundary + \"--\").append(LINE_FEED); writer.close(); // checks server's status code first int status = httpConn.getResponseCode(); if (status == HttpURLConnection.HTTP_OK) { BufferedReader reader = new BufferedReader(new InputStreamReader( httpConn.getInputStream())); String line = null; while ((line = reader.readLine()) != null) { response.add(line); } reader.close(); httpConn.disconnect(); } else { InputStream is = httpConn.getErrorStream(); BufferedReader reader = new BufferedReader(new InputStreamReader(is)); String line; StringBuilder builder = new StringBuilder(); while ((line = reader.readLine()) != null) { builder.append(line); builder.append(\"\\r\\n\"); } reader.close(); httpConn.disconnect(); throw new IOException(\"Server returned non-OK status: \" + status + \"\\r\\n\"+builder.toString()); } return response; } } String charset = \"UTF-8\"; File uploadFile1 = new File(\"D:/NewsProject.war\"); //String requestURL = \"http://localhost:8081/deploymanager/deploy/\"; String requestURL = \"https://webgaddeployserver.azurewebsites.net/deploymanager/deploy/\"; try { MultipartUtils multipart = new MultipartUtils(requestURL, charset, header); //multipart.addHeaderField(\"Authorization\", \"Basic \" + basicAuthorization); multipart.addFormField(\"deployPath\", \"/newsreader\"); multipart.addFilePart(\"warfile\", uploadFile1); List<String> response = multipart.send(); System.out.println(\"SERVER REPLIED:\"); for (String line : response) { System.out.println(line); } return; } catch (Exception e) { e.printStackTrace(); } Read property value in resource file public static String readPropertyValue(String propertyFileName, String key) { try { ClassLoader classloader = Thread.currentThread().getContextClassLoader(); InputStream is = classloader.getResourceAsStream(propertyFileName); Properties properties = new Properties(); properties.load(is); return properties.getProperty(key); } catch (Exception e) { e.printStackTrace(); return \"\"; } } InputStream to String public static String inputStreamToString(InputStream is) throws IOException { final int bufferSize = 1024; final char[] buffer = new char[bufferSize]; final StringBuilder out = new StringBuilder(); Reader in = new InputStreamReader(is, \"UTF-8\"); for (;;) { int rsz = in.read(buffer, 0, buffer.length); if (rsz < 0) break; out.append(buffer, 0, rsz); } return out.toString(); } BufferedReader to String public static String bufferedReaderToString(BufferedReader reader) throws IOException { StringBuffer jb = new StringBuffer(); String line = null; while ((line = reader.readLine()) != null) { jb.append(line); } return jb.toString(); } Add local jar file Copy jar file to lib\\a.jar File pom.xml, add to <build> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-install-plugin</artifactId> <version>2.5.2</version> <executions> <execution> <phase>initialize</phase> <goals> <goal>install-file</goal> </goals> <configuration> <file>${basedir}/lib/a.jar</file> <groupId>vn.com.webgad.library</groupId> <artifactId>webgad-library</artifactId> <version>0.0.1-SNAPSHOT</version> <packaging>jar</packaging> </configuration> </execution> </executions> </plugin> </plugins> <pluginManagement> <plugins> <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.--> <plugin> <groupId>org.eclipse.m2e</groupId> <artifactId>lifecycle-mapping</artifactId> <version>1.0.0</version> <configuration> <lifecycleMappingMetadata> <pluginExecutions> <pluginExecution> <pluginExecutionFilter> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-install-plugin </artifactId> <versionRange> [2.5.2,) </versionRange> <goals> <goal>install-file</goal> </goals> </pluginExecutionFilter> <action> <ignore></ignore> </action> </pluginExecution> </pluginExecutions> </lifecycleMappingMetadata> </configuration> </plugin> </plugins> </pluginManagement> Add to dependencies <dependency> <groupId>vn.com.webgad.library</groupId> <artifactId>webgad-library</artifactId> <version>0.0.1-SNAPSHOT</version> </dependency> Api return file @RequestMapping(value=\"/{id}/credential\", method = RequestMethod.GET, produces = MediaType.APPLICATION_OCTET_STREAM_VALUE) public ResponseEntity<byte[]> getCredential(@PathVariable String id, HttpServletRequest request) { try { String content =\"abc\"; HttpHeaders headers = new HttpHeaders(); headers.setContentDisposition(ContentDisposition.parse(\"attachment; filename=\\\"webgadSecret.json\\\"\")); ResponseEntity<byte[]> responseEntity = new ResponseEntity<>(content.getBytes(), headers, HttpStatus.OK); return responseEntity; } catch (Exception e) { e.printStackTrace(); throw new BusinessException(MessageConst.E_UNEXPECTED_ERROR, HttpServletResponse.SC_INTERNAL_SERVER_ERROR); } } Debug remote application in Eclipse Debug general application java -Xdebug -Xrunjdwp:transport=dt_socket,address=8998,server=y -jar myapp.jar Debug Spark application running Locally Add config: agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005 For example: spark-submit --master local --conf spark.driver.extraJavaOptions=-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005 --class org.apache.spark.examples.JavaWordCount spark-examples_2.12-3.0.1.jar Debug Spark application running on Remote server Run command: export SPARK_SUBMIT_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5050 Configure Eclipse Go to Run -> Debug Configurations Create a new Remote Java Application configuration Configure the remote application If you would like to have this launch configuration in your favorites menu, In tab Common, check Debug","title":"Java"},{"location":"SoftwareEngineering/Java/Java/#encryption-using-aes","text":"File pom.xml <!-- https://mvnrepository.com/artifact/commons-codec/commons-codec --> <dependency> <groupId>commons-codec</groupId> <artifactId>commons-codec</artifactId> <version>1.11</version> </dependency> import javax.crypto.Cipher; import javax.crypto.spec.IvParameterSpec; import javax.crypto.spec.SecretKeySpec; import org.apache.commons.codec.binary.Base64; public class Encryption { private static final String KEY = \"Bar12345Bar12345\"; // 128 bit key private static final String INIT_VECTOR = \"RandomInitVector\"; // 16 bytes IV public static String encrypt(String key, String initVector, String value) { try { IvParameterSpec iv = new IvParameterSpec(initVector.getBytes(\"UTF-8\")); SecretKeySpec skeySpec = new SecretKeySpec(key.getBytes(\"UTF-8\"), \"AES\"); Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5PADDING\"); cipher.init(Cipher.ENCRYPT_MODE, skeySpec, iv); byte[] encrypted = cipher.doFinal(value.getBytes()); return Base64.encodeBase64String(encrypted); } catch (Exception ex) { ex.printStackTrace(); } return null; } public static String decrypt(String key, String initVector, String encrypted) { try { IvParameterSpec iv = new IvParameterSpec(initVector.getBytes(\"UTF-8\")); SecretKeySpec skeySpec = new SecretKeySpec(key.getBytes(\"UTF-8\"), \"AES\"); Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5PADDING\"); cipher.init(Cipher.DECRYPT_MODE, skeySpec, iv); byte[] original = cipher.doFinal(Base64.decodeBase64(encrypted)); return new String(original); } catch (Exception ex) { ex.printStackTrace(); } return null; } public static String encrypt(String value) { return encrypt(KEY, INIT_VECTOR, value); } public static String decrypt(String value) { return decrypt(KEY, INIT_VECTOR, value); } }","title":"Encryption using AES"},{"location":"SoftwareEngineering/Java/Java/#send-http-request","text":"public static String sendHttpRequest(String url, String method, HashMap<String, String> params, String data) { HttpURLConnection connection = null; try { // Create connection URL urlObj = new URL(url); connection = (HttpURLConnection) urlObj.openConnection(); if (method != null && !\"get\".equalsIgnoreCase(method)) { connection.setRequestMethod(method); } /* * connection.setRequestProperty(\"Content-Type\", * \"application/x-www-form-urlencoded\"); */ /* * connection.setRequestProperty(\"Content-Length\", * Integer.toString(urlParameters.getBytes().length)); * connection.setRequestProperty(\"Content-Language\", \"en-US\"); */ if (params != null && !params.isEmpty()) { Set<String> keySet = params.keySet(); for(String key: keySet) { if(Utils.isNullOrEmpty(key)) { continue; } String value = params.get(key); connection.setRequestProperty(key, value); } } connection.setUseCaches(false); // Send request if (\"POST\".equals(method) || \"post\".equals(method)) { connection.setDoOutput(true); DataOutputStream wr = new DataOutputStream(connection.getOutputStream()); if (data != null) { wr.writeBytes(data); } wr.close(); } // Get Response InputStream is = connection.getInputStream(); BufferedReader rd = new BufferedReader(new InputStreamReader(is)); StringBuilder response = new StringBuilder(); // or StringBuffer if Java version 5+ String line; while ((line = rd.readLine()) != null) { response.append(line); response.append('\\r'); } rd.close(); return response.toString(); } catch (IOException e) { try { InputStream is = connection.getErrorStream(); BufferedReader rd = new BufferedReader(new InputStreamReader(is)); StringBuilder response = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { response.append(line); response.append('\\r'); } rd.close(); return response.toString(); } catch (Exception e2) { e2.printStackTrace(); return null; } } catch (Exception e) { e.printStackTrace(); return null; } finally { if (connection != null) { connection.disconnect(); } } } public static String sendGetRequest(String url, HashMap<String, String> params) { return sendHttpRequest(url, \"GET\", params, null); } public static String sendGetRequest(String url) { return sendHttpRequest(url, \"GET\", null, null); } public static String sendPostRequest(String url, HashMap<String, String> params, String data) { return sendHttpRequest(url, \"POST\", params, data); } public static void main(String[] args) { System.out.println(sendPostRequest(\"http://localhost:8080/mavenTest3/TestServlet\", null, null)); }","title":"Send Http request"},{"location":"SoftwareEngineering/Java/Java/#utf-8-encoding","text":"// Send request if (\"POST\".equals(method) || \"post\".equals(method)) { connection.setDoOutput(true); BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(connection.getOutputStream(), \"UTF-8\")); if (data != null) { bw.write(data); } bw.flush(); bw.close(); } // Get Response InputStream is = connection.getInputStream(); BufferedReader rd = new BufferedReader(new InputStreamReader(is, \"UTF-8\")); StringBuilder response = new StringBuilder();","title":"UTF 8 Encoding"},{"location":"SoftwareEngineering/Java/Java/#send-multipart-file","text":"import java.io.BufferedReader; import java.io.File; import java.io.FileInputStream; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.io.OutputStream; import java.io.OutputStreamWriter; import java.io.PrintWriter; import java.net.HttpURLConnection; import java.net.URL; import java.net.URLConnection; import java.util.ArrayList; import java.util.HashMap; import java.util.List; import java.util.Set; /** * This utility class provides an abstraction layer for sending multipart HTTP * POST requests to a web server. * @author * */ public class MultipartUtils { private final String boundary; private static final String LINE_FEED = \"\\r\\n\"; private HttpURLConnection httpConn; private String charset; private OutputStream outputStream; private PrintWriter writer; /** * This constructor initializes a new HTTP POST request with content type * is set to multipart/form-data * @param requestURL * @param charset * @throws IOException */ public MultipartUtils(String requestURL, String charset, HashMap<String, String> headers) throws IOException { this.charset = charset; // creates a unique boundary based on time stamp boundary = \"===\" + System.currentTimeMillis() + \"===\"; URL url = new URL(requestURL); httpConn = (HttpURLConnection) url.openConnection(); httpConn.setUseCaches(false); httpConn.setDoOutput(true); // indicates POST method httpConn.setDoInput(true); httpConn.setRequestProperty(\"Content-Type\", \"multipart/form-data; boundary=\" + boundary); if (headers != null && !headers.isEmpty()) { Set<String> keySet = headers.keySet(); for (String key : keySet) { if (Utils.isNullOrEmpty(key)) { continue; } String value = headers.get(key); httpConn.setRequestProperty(key, value); } } outputStream = httpConn.getOutputStream(); writer = new PrintWriter(new OutputStreamWriter(outputStream, charset), true); } /** * Adds a form field to the request * @param name field name * @param value field value */ public void addFormField(String name, String value) { writer.append(\"--\" + boundary).append(LINE_FEED); writer.append(\"Content-Disposition: form-data; name=\\\"\" + name + \"\\\"\") .append(LINE_FEED); writer.append(\"Content-Type: text/plain; charset=\" + charset).append( LINE_FEED); writer.append(LINE_FEED); writer.append(value).append(LINE_FEED); writer.flush(); } /** * Adds a upload file section to the request * @param fieldName name attribute in <input type=\"file\" name=\"...\" /> * @param uploadFile a File to be uploaded * @throws IOException */ public void addFilePart(String fieldName, File uploadFile) throws IOException { String fileName = uploadFile.getName(); writer.append(\"--\" + boundary).append(LINE_FEED); writer.append( \"Content-Disposition: form-data; name=\\\"\" + fieldName + \"\\\"; filename=\\\"\" + fileName + \"\\\"\") .append(LINE_FEED); writer.append( \"Content-Type: \" + URLConnection.guessContentTypeFromName(fileName)) .append(LINE_FEED); writer.append(\"Content-Transfer-Encoding: binary\").append(LINE_FEED); writer.append(LINE_FEED); writer.flush(); FileInputStream inputStream = new FileInputStream(uploadFile); byte[] buffer = new byte[4096]; int bytesRead = -1; while ((bytesRead = inputStream.read(buffer)) != -1) { outputStream.write(buffer, 0, bytesRead); } outputStream.flush(); inputStream.close(); writer.append(LINE_FEED); writer.flush(); } /** * Adds a header field to the request. * @param name - name of the header field * @param value - value of the header field */ public void addHeaderField(String name, String value) { writer.append(name + \": \" + value).append(LINE_FEED); writer.flush(); } /** * Completes the request and receives response from the server. * @return a list of Strings as response in case the server returned * status OK, otherwise an exception is thrown. * @throws IOException */ public List<String> send() throws IOException { List<String> response = new ArrayList<String>(); writer.append(LINE_FEED).flush(); writer.append(\"--\" + boundary + \"--\").append(LINE_FEED); writer.close(); // checks server's status code first int status = httpConn.getResponseCode(); if (status == HttpURLConnection.HTTP_OK) { BufferedReader reader = new BufferedReader(new InputStreamReader( httpConn.getInputStream())); String line = null; while ((line = reader.readLine()) != null) { response.add(line); } reader.close(); httpConn.disconnect(); } else { InputStream is = httpConn.getErrorStream(); BufferedReader reader = new BufferedReader(new InputStreamReader(is)); String line; StringBuilder builder = new StringBuilder(); while ((line = reader.readLine()) != null) { builder.append(line); builder.append(\"\\r\\n\"); } reader.close(); httpConn.disconnect(); throw new IOException(\"Server returned non-OK status: \" + status + \"\\r\\n\"+builder.toString()); } return response; } } String charset = \"UTF-8\"; File uploadFile1 = new File(\"D:/NewsProject.war\"); //String requestURL = \"http://localhost:8081/deploymanager/deploy/\"; String requestURL = \"https://webgaddeployserver.azurewebsites.net/deploymanager/deploy/\"; try { MultipartUtils multipart = new MultipartUtils(requestURL, charset, header); //multipart.addHeaderField(\"Authorization\", \"Basic \" + basicAuthorization); multipart.addFormField(\"deployPath\", \"/newsreader\"); multipart.addFilePart(\"warfile\", uploadFile1); List<String> response = multipart.send(); System.out.println(\"SERVER REPLIED:\"); for (String line : response) { System.out.println(line); } return; } catch (Exception e) { e.printStackTrace(); }","title":"Send multipart file"},{"location":"SoftwareEngineering/Java/Java/#read-property-value-in-resource-file","text":"public static String readPropertyValue(String propertyFileName, String key) { try { ClassLoader classloader = Thread.currentThread().getContextClassLoader(); InputStream is = classloader.getResourceAsStream(propertyFileName); Properties properties = new Properties(); properties.load(is); return properties.getProperty(key); } catch (Exception e) { e.printStackTrace(); return \"\"; } }","title":"Read property value in resource file"},{"location":"SoftwareEngineering/Java/Java/#inputstream-to-string","text":"public static String inputStreamToString(InputStream is) throws IOException { final int bufferSize = 1024; final char[] buffer = new char[bufferSize]; final StringBuilder out = new StringBuilder(); Reader in = new InputStreamReader(is, \"UTF-8\"); for (;;) { int rsz = in.read(buffer, 0, buffer.length); if (rsz < 0) break; out.append(buffer, 0, rsz); } return out.toString(); }","title":"InputStream to String"},{"location":"SoftwareEngineering/Java/Java/#bufferedreader-to-string","text":"public static String bufferedReaderToString(BufferedReader reader) throws IOException { StringBuffer jb = new StringBuffer(); String line = null; while ((line = reader.readLine()) != null) { jb.append(line); } return jb.toString(); }","title":"BufferedReader to String"},{"location":"SoftwareEngineering/Java/Java/#add-local-jar-file","text":"Copy jar file to lib\\a.jar File pom.xml, add to <build> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-install-plugin</artifactId> <version>2.5.2</version> <executions> <execution> <phase>initialize</phase> <goals> <goal>install-file</goal> </goals> <configuration> <file>${basedir}/lib/a.jar</file> <groupId>vn.com.webgad.library</groupId> <artifactId>webgad-library</artifactId> <version>0.0.1-SNAPSHOT</version> <packaging>jar</packaging> </configuration> </execution> </executions> </plugin> </plugins> <pluginManagement> <plugins> <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.--> <plugin> <groupId>org.eclipse.m2e</groupId> <artifactId>lifecycle-mapping</artifactId> <version>1.0.0</version> <configuration> <lifecycleMappingMetadata> <pluginExecutions> <pluginExecution> <pluginExecutionFilter> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-install-plugin </artifactId> <versionRange> [2.5.2,) </versionRange> <goals> <goal>install-file</goal> </goals> </pluginExecutionFilter> <action> <ignore></ignore> </action> </pluginExecution> </pluginExecutions> </lifecycleMappingMetadata> </configuration> </plugin> </plugins> </pluginManagement> Add to dependencies <dependency> <groupId>vn.com.webgad.library</groupId> <artifactId>webgad-library</artifactId> <version>0.0.1-SNAPSHOT</version> </dependency>","title":"Add local jar file"},{"location":"SoftwareEngineering/Java/Java/#api-return-file","text":"@RequestMapping(value=\"/{id}/credential\", method = RequestMethod.GET, produces = MediaType.APPLICATION_OCTET_STREAM_VALUE) public ResponseEntity<byte[]> getCredential(@PathVariable String id, HttpServletRequest request) { try { String content =\"abc\"; HttpHeaders headers = new HttpHeaders(); headers.setContentDisposition(ContentDisposition.parse(\"attachment; filename=\\\"webgadSecret.json\\\"\")); ResponseEntity<byte[]> responseEntity = new ResponseEntity<>(content.getBytes(), headers, HttpStatus.OK); return responseEntity; } catch (Exception e) { e.printStackTrace(); throw new BusinessException(MessageConst.E_UNEXPECTED_ERROR, HttpServletResponse.SC_INTERNAL_SERVER_ERROR); } }","title":"Api return file"},{"location":"SoftwareEngineering/Java/Java/#debug-remote-application-in-eclipse","text":"","title":"Debug remote application in Eclipse"},{"location":"SoftwareEngineering/Java/Java/#debug-general-application","text":"java -Xdebug -Xrunjdwp:transport=dt_socket,address=8998,server=y -jar myapp.jar","title":"Debug general application"},{"location":"SoftwareEngineering/Java/Java/#debug-spark-application-running-locally","text":"Add config: agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005 For example: spark-submit --master local --conf spark.driver.extraJavaOptions=-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005 --class org.apache.spark.examples.JavaWordCount spark-examples_2.12-3.0.1.jar","title":"Debug Spark application running Locally"},{"location":"SoftwareEngineering/Java/Java/#debug-spark-application-running-on-remote-server","text":"Run command: export SPARK_SUBMIT_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5050","title":"Debug Spark application running on Remote server"},{"location":"SoftwareEngineering/Java/Java/#configure-eclipse","text":"Go to Run -> Debug Configurations Create a new Remote Java Application configuration Configure the remote application If you would like to have this launch configuration in your favorites menu, In tab Common, check Debug","title":"Configure Eclipse"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/","text":"Markdown Quick Reference This guide is a very brief overview, with examples, of the syntax that Markdown supports. It is itself written in Markdown and you can copy the samples over to the left-hand pane for experimentation. It's shown as text and not rendered HTML . Simple Text Formatting First thing is first. You can use stars or underscores for italics. Double stars and double underscores for bold. Three together for both . Any word wrapped with two tildes will appear ~~crossed out.~~ Paragraphs are pretty easy too. Just have a blank line between chunks of text. This chunk of text is in a block quote. Its multiple lines will all be indented a bit from the rest of the text. Multiple levels of block quotes also work. Sometimes you want to include code, such as when you are explaining how <h1> HTML tags work, or maybe you are a programmer and you are discussing someMethod() . If you want to include code and have new lines preserved, indent the line with a tab or at least four spaces: Extra spaces work here too. This is also called preformatted text and it is useful for showing examples. The text will stay as text, so any *markdown* or <u>HTML</u> you add will not show up formatted. This way you can show markdown examples in a markdown document. You can also use preformatted text with your blockquotes as long as you add at least five spaces. Headings There are a couple of ways to make headings. Using three or more equals signs on a line under a heading makes it into an \"h1\" style. Three or more hyphens under a line makes it \"h2\" (slightly smaller). You can also use multiple pound symbols ( # ) before and after a heading. Pounds after the title are ignored. Here are some examples: This is H1 This is H2 This is H1 This is H2 This is H3 with some extra pounds You get the idea I don't need extra pounds at the end H6 is the max Links Let's link to a few sites. First, let's use the bare URL, like https://www.github.com . Great for text, but ugly for HTML. Next is an inline link to Google . A little nicer. This is a reference-style link to Wikipedia . Lastly, here's a pretty link to Yahoo . The reference-style and pretty links both automatically use the links defined below, but they could be defined anywhere in the markdown and are removed from the HTML. The names are also case insensitive, so you can use YaHoO and have it link properly. Title attributes may be added to links by adding text after a link. This is the inline link with a \"Bing\" title. You can also go to W3C and maybe visit a friend . Email addresses in plain text are not linked: test@example.com. Email addresses wrapped in angle brackets are linked: test@example.com . They are also obfuscated so that email harvesting spam robots hopefully won't get them. Lists This is a bulleted list Great for shopping lists You can also use hyphens Or plus symbols The above is an \"unordered\" list. Now, on for a bit of order. Numbered lists are also easy Just start with a number However, the actual number doesn't matter when converted to HTML. This will still show up as 4. You might want a few advanced lists: This top-level list is wrapped in paragraph tags This generates an extra space between each top-level item. You do it by adding a blank line This nested list also has blank lines between the list items. How to create nested lists Start your regular list Indent nested lists with two spaces Further nesting means you should indent with two more spaces This line is indented with four spaces. List items can be quite lengthy. You can keep typing and either continue them on the next line with no indentation. Alternately, if that looks ugly, you can also indent the next line a bit for a prettier look. You can put large blocks of text in your list by just indenting with two spaces. This is formatted the same as code, but you can inspect the HTML and find that it's just wrapped in a <p> tag and won't be shown as preformatted text. You can keep adding more and more paragraphs to a single list item by adding the traditional blank line and then keep on indenting the paragraphs with two spaces. You really only need to indent the first line, but that looks ugly. Lists support blockquotes Just like this example here. By the way, you can nest lists inside blockquotes! - Fantastic! Lists support preformatted text You just need to indent an additional four spaces. Even More Horizontal Rule If you need a horizontal rule you just need to put at least three hyphens, asterisks, or underscores on a line by themselves. You can also even put spaces between the characters. Those three all produced horizontal lines. Keep in mind that three hyphens under any text turns that text into a heading, so add a blank like if you use hyphens. Images Images work exactly like links, but they have exclamation points in front. They work with references and titles too. and . Inline HTML If markdown is too limiting, you can just insert your own crazy HTML. Span-level HTML can still use markdown . Block level elements must be separated from text by a blank line and must not have any spaces before the opening and closing HTML. It is a pity, but markdown does **not** work in here for most markdown parsers. [Marked] handles it pretty well. Code var example = true; if (isAwesome){ return true } { \"scripts\": { \"docs:dev\": \"vuepress dev docs\", \"docs:build\": \"vuepress build docs\" } } . \u251c\u2500 docs \u2502 \u251c\u2500 README.md \u2502 \u2514\u2500 .vuepress \u2502 \u2514\u2500 config.js \u2514\u2500 package.json export default { // Highlighted data () { return { msg: `Highlighted! This line isn't highlighted, but this and the next 2 are.`, motd: 'VuePress is awesome', lorem: 'ipsum', } } } Table Relative Path Page Routing /README.md / /guide/README.md /guide/ /config.md /config.html","title":"Markdown"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#markdown-quick-reference","text":"This guide is a very brief overview, with examples, of the syntax that Markdown supports. It is itself written in Markdown and you can copy the samples over to the left-hand pane for experimentation. It's shown as text and not rendered HTML .","title":"Markdown Quick Reference"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#simple-text-formatting","text":"First thing is first. You can use stars or underscores for italics. Double stars and double underscores for bold. Three together for both . Any word wrapped with two tildes will appear ~~crossed out.~~ Paragraphs are pretty easy too. Just have a blank line between chunks of text. This chunk of text is in a block quote. Its multiple lines will all be indented a bit from the rest of the text. Multiple levels of block quotes also work. Sometimes you want to include code, such as when you are explaining how <h1> HTML tags work, or maybe you are a programmer and you are discussing someMethod() . If you want to include code and have new lines preserved, indent the line with a tab or at least four spaces: Extra spaces work here too. This is also called preformatted text and it is useful for showing examples. The text will stay as text, so any *markdown* or <u>HTML</u> you add will not show up formatted. This way you can show markdown examples in a markdown document. You can also use preformatted text with your blockquotes as long as you add at least five spaces.","title":"Simple Text Formatting"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#headings","text":"There are a couple of ways to make headings. Using three or more equals signs on a line under a heading makes it into an \"h1\" style. Three or more hyphens under a line makes it \"h2\" (slightly smaller). You can also use multiple pound symbols ( # ) before and after a heading. Pounds after the title are ignored. Here are some examples:","title":"Headings"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#this-is-h1","text":"","title":"This is H1"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#this-is-h2","text":"","title":"This is H2"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#this-is-h1_1","text":"","title":"This is H1"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#this-is-h2_1","text":"","title":"This is H2"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#this-is-h3-with-some-extra-pounds","text":"","title":"This is H3 with some extra pounds"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#you-get-the-idea","text":"","title":"You get the idea"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#i-dont-need-extra-pounds-at-the-end","text":"","title":"I don't need extra pounds at the end"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#h6-is-the-max","text":"","title":"H6 is the max"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#links","text":"Let's link to a few sites. First, let's use the bare URL, like https://www.github.com . Great for text, but ugly for HTML. Next is an inline link to Google . A little nicer. This is a reference-style link to Wikipedia . Lastly, here's a pretty link to Yahoo . The reference-style and pretty links both automatically use the links defined below, but they could be defined anywhere in the markdown and are removed from the HTML. The names are also case insensitive, so you can use YaHoO and have it link properly. Title attributes may be added to links by adding text after a link. This is the inline link with a \"Bing\" title. You can also go to W3C and maybe visit a friend . Email addresses in plain text are not linked: test@example.com. Email addresses wrapped in angle brackets are linked: test@example.com . They are also obfuscated so that email harvesting spam robots hopefully won't get them.","title":"Links"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#lists","text":"This is a bulleted list Great for shopping lists You can also use hyphens Or plus symbols The above is an \"unordered\" list. Now, on for a bit of order. Numbered lists are also easy Just start with a number However, the actual number doesn't matter when converted to HTML. This will still show up as 4. You might want a few advanced lists: This top-level list is wrapped in paragraph tags This generates an extra space between each top-level item. You do it by adding a blank line This nested list also has blank lines between the list items. How to create nested lists Start your regular list Indent nested lists with two spaces Further nesting means you should indent with two more spaces This line is indented with four spaces. List items can be quite lengthy. You can keep typing and either continue them on the next line with no indentation. Alternately, if that looks ugly, you can also indent the next line a bit for a prettier look. You can put large blocks of text in your list by just indenting with two spaces. This is formatted the same as code, but you can inspect the HTML and find that it's just wrapped in a <p> tag and won't be shown as preformatted text. You can keep adding more and more paragraphs to a single list item by adding the traditional blank line and then keep on indenting the paragraphs with two spaces. You really only need to indent the first line, but that looks ugly. Lists support blockquotes Just like this example here. By the way, you can nest lists inside blockquotes! - Fantastic! Lists support preformatted text You just need to indent an additional four spaces.","title":"Lists"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#even-more","text":"","title":"Even More"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#horizontal-rule","text":"If you need a horizontal rule you just need to put at least three hyphens, asterisks, or underscores on a line by themselves. You can also even put spaces between the characters. Those three all produced horizontal lines. Keep in mind that three hyphens under any text turns that text into a heading, so add a blank like if you use hyphens.","title":"Horizontal Rule"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#images","text":"Images work exactly like links, but they have exclamation points in front. They work with references and titles too. and .","title":"Images"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#inline-html","text":"If markdown is too limiting, you can just insert your own crazy HTML. Span-level HTML can still use markdown . Block level elements must be separated from text by a blank line and must not have any spaces before the opening and closing HTML. It is a pity, but markdown does **not** work in here for most markdown parsers. [Marked] handles it pretty well.","title":"Inline HTML"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#code","text":"var example = true; if (isAwesome){ return true } { \"scripts\": { \"docs:dev\": \"vuepress dev docs\", \"docs:build\": \"vuepress build docs\" } } . \u251c\u2500 docs \u2502 \u251c\u2500 README.md \u2502 \u2514\u2500 .vuepress \u2502 \u2514\u2500 config.js \u2514\u2500 package.json export default { // Highlighted data () { return { msg: `Highlighted! This line isn't highlighted, but this and the next 2 are.`, motd: 'VuePress is awesome', lorem: 'ipsum', } } }","title":"Code"},{"location":"SoftwareEngineering/Markdown/markdown-quick-reference/#table","text":"Relative Path Page Routing /README.md / /guide/README.md /guide/ /config.md /config.html","title":"Table"}]}